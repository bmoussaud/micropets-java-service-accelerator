#@ load("@ytt:data", "data")
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    resourceclaims.services.apps.tanzu.vmware.com/controller: "true"
  name: #@ data.values.petKind.lower()+"s-resource-claims-postgres"
rules:
  - apiGroups: ["sql.tanzu.vmware.com"]
    resources: ["postgres"]
    verbs:
      - get
      - list
      - watch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: #@ data.values.petKind.lower()+"s-app-operator-reader"
  labels:
    apps.tanzu.vmware.com/aggregate-to-app-operator-cluster-access: "true"
rules:
  - apiGroups: ["sql.tanzu.vmware.com"]
    resources: ["postgres"]
    verbs:
      - get
      - list
      - watch
      - update
---
apiVersion: services.apps.tanzu.vmware.com/v1alpha1
kind: ClusterInstanceClass
metadata:
  name: tanzu-postgres
spec:
  description:
    short: Tanzu Postgres instances with a postgresql engine
  pool:
    group: sql.tanzu.vmware.com
    kind: Postgres
---
apiVersion: services.apps.tanzu.vmware.com/v1alpha1
kind: ResourceClaimPolicy
metadata:
  name: pgsql-cross-namespace
  namespace: dev-tap
spec:
  consumingNamespaces:
    - "*"
  subject:
    group: sql.tanzu.vmware.com/v1
    kind: Postgres
---
apiVersion: services.apps.tanzu.vmware.com/v1alpha1
kind: ResourceClaim
metadata:
  name: #@ data.values.petKind.lower()+"s-database"
  namespace: dev-tap
spec:
  ref:
    apiVersion: sql.tanzu.vmware.com/v1
    kind: Postgres
    name: #@ data.values.petKind.lower()+"s-database"
    namespace: dev-tap
